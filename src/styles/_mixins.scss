@mixin max-media($point) {
  $_point: null;
  @if map-get($breakpoints, $point) {
    $_point: map-get($breakpoints, $point);
  } @else {
    $_point: $point;
  }
  @media screen and (max-width: $_point) {
    @content;
  }
}

@mixin min-media($point) {
  $_point: null;
  @if map-get($breakpoints, $point) {
    $_point: map-get($breakpoints, $point);
  } @else {
    $_point: $point;
  }
  @media screen and (min-width: $_point) {
    @content;
  }
}

@mixin reset-a() {
  color: inherit;
  text-decoration: none;
}

@mixin hover-text-primary() {
  transition: var(--transition);
  &:hover {
    color: var(--color-primary);
  }
}

@mixin ratio($width, $height, $isImageFull: null) {
  position: relative;
  &::before {
    content: "";
    display: block;
    height: 0;
    padding-top: calc(#{$height} / #{$width} * 100%);
  }
  > * {
    display: block;
    position: absolute;
    @if $isImageFull {
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      object-fit: cover;
    } @else {
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      width: auto;
      height: auto;
      max-width: 100%;
      max-height: 100%;
    }
  }
}

@mixin line-clamp($line) {
  overflow: hidden;
  text-overflow: ellipsis;
  -webkit-line-clamp: $line;
  display: -webkit-box;
  -webkit-box-orient: vertical;
}

@mixin custom-button() {
  --n-color: var(--color-primary);
  --n-color-pressed: var(--color-primary);
  --n-color-hover: #af0007;
  --n-text-color: var(--color-white);
  --n-ripple-color: transparent;
  --n-color-focus: var(--color-primary);
  --n-text-color-focus: var(--color-white);
  --n-text-color-hover: var(--color-white);
  --n-text-color-pressed: var(--color-white);
  --n-border-hover: 1px solid transparent;
  --n-border-radius: 0;
}

@mixin custom-border_input() {
  --n-border-hover: transparent;
  --n-border-focus: transparent;
  --n-caret-color: var(--color-primary);
}
